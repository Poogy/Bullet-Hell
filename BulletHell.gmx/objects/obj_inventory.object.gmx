<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Names

////////////////////////////////
//----Array for item names----//
////////////////////////////////

//--| Armor

item_name[ARMOR_NONE]           = "Keine Rustung";
item_name[ARMOR_LEATHER]        = "Leder Rustung";
item_name[ARMOR_IRON]           = "Eisen Rustung";
item_name[ARMOR_BLACKROCK]      = "Schwazfels Rustung";
item_name[HELMET_NONE]          = "Kein Helm";
item_name[HELMET_LEATHER]       = "Leder Helm";
item_name[HELMET_IRON]          = "Eisen Helm";
item_name[HELMET_BLACKROCK]     = "Schwarzfels Helm";

//--| Materials

item_name[LEATHER]              = "Leder";
item_name[IRON]                 = "Eisen";
item_name[REFINED_IRON]         = "Eisenbarren";
item_name[BLACKROCK]            = "Schwarzfels";

//--| Misc

item_name[MONEY_BAG_SMALL]      = "Münzbeutel";
item_name[KEY_GOLDEN]           = "Goldner Schlüssel";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Sprites


//////////////////////////////////
//----Array for item sprites----//
//////////////////////////////////

//--| Armor

sprite[ARMOR_NONE]           = spr_armor_none;
sprite[ARMOR_LEATHER]        = spr_armor_leather;
sprite[ARMOR_IRON]           = spr_armor_iron;
sprite[ARMOR_BLACKROCK]      = spr_armor_blackrock;
sprite[HELMET_NONE]          = spr_helmet_none;
sprite[HELMET_LEATHER]       = spr_helmet_leather;
sprite[HELMET_IRON]          = spr_helmet_iron;
sprite[HELMET_BLACKROCK]     = spr_helmet_blackrock;

//--| Materials

sprite[LEATHER]              = spr_mat_leather;
sprite[IRON]                 = spr_mat_iron;
sprite[REFINED_IRON]         = spr_mat_refined_iron;
sprite[BLACKROCK]            = spr_mat_blackrock;

//--| Misc

sprite[MONEY_BAG_SMALL]      = spr_money_bag_small;
sprite[KEY_GOLDEN]           = spr_key_golden;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Objects


//////////////////////////////////
//----Array for item objects----//
//////////////////////////////////

//--| Armor

object[ARMOR_NONE]           = noone;
object[ARMOR_LEATHER]        = obj_armor_leather;
object[ARMOR_IRON]           = obj_armor_iron;
object[ARMOR_BLACKROCK]      = obj_armor_blackrock;
object[HELMET_NONE]          = noone;
object[HELMET_LEATHER]       = obj_helmet_leather;
object[HELMET_IRON]          = obj_helmet_iron;
object[HELMET_BLACKROCK]     = obj_helmet_blackrock;

//--| Materials

object[LEATHER]              = obj_mat_leather;
object[IRON]                 = obj_mat_iron;
object[REFINED_IRON]         = obj_mat_refined_iron;
object[BLACKROCK]            = obj_mat_blackrock;

//--| Misc

object[MONEY_BAG_SMALL]      = obj_money_bag_small;
object[KEY_GOLDEN]           = obj_key_golden;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item stackable


/////////////////////////////////////
//----Array for item stackables----//
/////////////////////////////////////

//--| Armor

stackable[ARMOR_NONE]           = false;
stackable[ARMOR_LEATHER]        = false;
stackable[ARMOR_IRON]           = false;
stackable[ARMOR_BLACKROCK]      = false;
stackable[HELMET_NONE]          = false;
stackable[HELMET_LEATHER]       = false;
stackable[HELMET_IRON]          = false;
stackable[HELMET_BLACKROCK]     = false;

//--| Materials

stackable[LEATHER]              = true;
stackable[IRON]                 = true;
stackable[REFINED_IRON]         = true;
stackable[BLACKROCK]            = true;

//--| Misc

stackable[MONEY_BAG_SMALL]      = true;
stackable[KEY_GOLDEN]           = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item count_n


/////////////////////////////////////
//------Array for item count-------//
/////////////////////////////////////

//--| Armor

n[ARMOR_NONE]           = 1;
n[ARMOR_LEATHER]        = 0;
n[ARMOR_IRON]           = 0;
n[ARMOR_BLACKROCK]      = 0;
n[HELMET_NONE]          = 1;
n[HELMET_LEATHER]       = 0;
n[HELMET_IRON]          = 0;
n[HELMET_BLACKROCK]     = 0;

//--| Materials

n[LEATHER]              = 0;
n[IRON]                 = 0;
n[REFINED_IRON]         = 0;
n[BLACKROCK]            = 0;

//--| Misc

n[MONEY_BAG_SMALL]      = 0;
n[KEY_GOLDEN]           = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Scripts


//////////////////////////////////
//----Array for item scripts----//
//////////////////////////////////

//--| Armor
script[ARMOR_NONE]           = noone;
script[ARMOR_LEATHER]        = noone;
script[ARMOR_IRON]           = noone;
script[ARMOR_BLACKROCK]      = noone;
script[HELMET_NONE]          = noone;
script[HELMET_LEATHER]       = noone;
script[HELMET_IRON]          = noone;
script[HELMET_BLACKROCK]     = noone;

//--| Materials

script[LEATHER]              = noone;
script[IRON]                 = noone;
script[REFINED_IRON]         = noone;
script[BLACKROCK]            = noone;

//--| Misc

script[MONEY_BAG_SMALL]      = scr_open_small_money_bag;
script[KEY_GOLDEN]           = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Info texts


/////////////////////////////////////
//----Array for item info texts----//
/////////////////////////////////////

//--| Armor

info_text[ARMOR_NONE]           = "Keine Rustung";
info_text[ARMOR_LEATHER]        = "Die wohl schlechteste Rüstung die man weit und breit finden kann";
info_text[ARMOR_IRON]           = "Etwas besser aber immer noch SCHLECHT";
info_text[ARMOR_BLACKROCK]      = "";
info_text[HELMET_NONE]          = "Kein Helm";
info_text[HELMET_LEATHER]       = "Es macht kaum einen Unterschied ob man diesen Helm trägt oder nicht da er ja nichtmal wirklich ein Helm ist";
info_text[HELMET_IRON]          = "Suckt immer noch ziemlich hart";
info_text[HELMET_BLACKROCK]     = "";

//--| Materials

info_text[LEATHER]              = "Wird für schwache Rüstungen verwendet";
info_text[IRON]                 = "";
info_text[REFINED_IRON]         = "Wird für die zweiten Rüstungsteile verwendet";
info_text[BLACKROCK]            = "";

//--| Misc

info_text[MONEY_BAG_SMALL]      = "[c=12632256]Ein paar Münzen[/c]";
info_text[KEY_GOLDEN]           = "[c=12632256]Glitzert golden[/c]";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item values


//////////////////////////////////
//----Array for item values----///
//////////////////////////////////

//--| Armor

value[ARMOR_NONE]           = 0;
value[ARMOR_LEATHER]        = 250;
value[ARMOR_IRON]           = 400;
value[ARMOR_BLACKROCK]      = 600;
value[HELMET_NONE]          = 0;
value[HELMET_LEATHER]       = 150;
value[HELMET_IRON]          = 200;
value[HELMET_BLACKROCK]     = 300;

//--| Materials

value[LEATHER]              = 20;
value[IRON]                 = 30;
value[REFINED_IRON]         = 35;
value[BLACKROCK]            = 40;

//--| Misc

value[MONEY_BAG_SMALL]      = 0;
value[KEY_GOLDEN]           = 100;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Category


//////////////////////////////////
//-------Array for types-------///
//////////////////////////////////

//--| Armor

type[ARMOR_NONE]           = "eq";
type[ARMOR_LEATHER]        = "eq";
type[ARMOR_IRON]           = "eq";
type[ARMOR_BLACKROCK]      = "eq";
type[HELMET_NONE]          = "eq";
type[HELMET_LEATHER]       = "eq";
type[HELMET_IRON]          = "eq";
type[HELMET_BLACKROCK]     = "eq";

//--| Materials

type[LEATHER]              = "mat";
type[IRON]                 = "mat";
type[REFINED_IRON]         = "mat";
type[BLACKROCK]            = "mat";

//--| Misc

type[MONEY_BAG_SMALL]      = "use";
type[KEY_GOLDEN]           = "misc";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item hp


//////////////////////////////////
//------Array for item hp------///
//////////////////////////////////

//--| Armor

item_hp[ARMOR_NONE]           = 5;
item_hp[ARMOR_LEATHER]        = 30;
item_hp[ARMOR_IRON]           = 45;
item_hp[ARMOR_BLACKROCK]      = 65;
item_hp[HELMET_NONE]          = 0;
item_hp[HELMET_LEATHER]       = 10;
item_hp[HELMET_LEATHER]       = 15;
item_hp[HELMET_BLACKROCK]     = 25;

//--| Materials

item_hp[LEATHER]              = 0;
item_hp[IRON]                 = 0;
item_hp[REFINED_IRON]         = 0;
item_hp[BLACKROCK]            = 0;

//--| Misc

item_hp[MONEY_BAG_SMALL]      = 0;
item_hp[KEY_GOLDEN]           = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables and recipes

//----Variables----
globalvar recipe_list;
globalvar recipe;
globalvar recipe_n;
globalvar ingredients;
globalvar ingredients_n;

globalvar item_name;
globalvar sprite;
globalvar object;
globalvar stackable;
globalvar n;
globalvar script;
globalvar info_text;
globalvar value;
globalvar item_hp;
globalvar type;
globalvar tier_helmet;
globalvar tier_armor;
globalvar draw;
globalvar armor;

eq_show = false;

//Armor
armor[0,0] = HELMET_NONE;
armor[0,1] = HELMET_LEATHER;
armor[0,2] = HELMET_IRON;
armor[0,3] = HELMET_BLACKROCK;

armor[1,0] = ARMOR_NONE;
armor[1,1] = ARMOR_LEATHER;
armor[1,2] = ARMOR_IRON;
armor[1,3] = ARMOR_BLACKROCK;

//----Recipes----
/*
recipe[list,recipe_number] = item
recipe_n[list,recipe_number] = mats count
list={
      1 = helmet;
      2 = armor;
      }

ingredients[list,recipe_number] = mats
ingredients_n[list,recipe_number] = mats count
*/

//----Recipes----
//Helmets - Recipies
recipe[0,0]               = HELMET_LEATHER;
recipe_n[0,0]             = 1;
recipe[0,1]               = HELMET_IRON;
recipe_n[0,1]             = 1;
recipe[0,2]               = HELMET_BLACKROCK;
recipe_n[0,2]             = 1;

//Armors - Recipies
recipe[1,0]               = ARMOR_LEATHER;
recipe_n[1,0]             = 1;
recipe[1,1]               = ARMOR_IRON;
recipe_n[1,1]             = 1;
recipe[1,2]               = ARMOR_BLACKROCK;
recipe_n[1,2]             = 1;

//Items - Recipies
recipe[2,0]               = REFINED_IRON;
recipe_n[2,0]             = 1;

//----ingredients----
//Helmets - ingredients
ingredients[0,0]        = LEATHER;
ingredients_n[0,0]      = 5;
ingredients[0,1]        = IRON;
ingredients_n[0,1]      = 5;
ingredients[0,2]        = BLACKROCK;
ingredients_n[0,2]      = 5;

//Armors - ingredients
ingredients[1,0]        = LEATHER;
ingredients_n[1,0]      = 10;
ingredients[1,1]        = IRON;
ingredients_n[1,1]      = 10;
ingredients[1,2]        = BLACKROCK;
ingredients_n[1,2]      = 10;

//Items - ingredients
ingredients[2,0]        = IRON;
ingredients_n[2,0]      = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw control
scr_input();

if (key_eq){
   if (eq_show){
      eq_show = false;
   } else {
      eq_show = true;
   }
}

//----Tier----
//Helmets[0]
if (n[armor[0,3]] == 1)     {tier_helmet = 3;}
else if (n[armor[0,2]] == 1){tier_helmet = 2;}
else if (n[armor[0,1]] == 1){tier_helmet = 1;}
else                        {tier_helmet = 0;}

//Armors[1]
if (n[armor[1,3]] == 1)     {tier_armor = 3;}
else if (n[armor[1,2]] == 1){tier_armor = 2;}
else if (n[armor[1,1]] == 1){tier_armor = 1;}
else                        {tier_armor = 0;}

//----HP----
obj_stat.stat[0] = item_hp[armor[1,tier_helmet]] + item_hp[armor[0,tier_armor]];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the inventory
//Mats
/*Gute Array version
for (i=0;i&lt;array_length_1d(n);i++){
        if (n[i] &gt; 0) &amp;&amp; (type[i] == "mat"){
           draw_sprite(sprite[i],0,48+48*j,48*1);
              if (stackable[i] == true){
                 draw_set_color(c_white);
                 draw_text(64+48*j,48*1,string(n[i]));
           }

        } 
}
*/
items_mats[0]=LEATHER;
items_mats[1]=IRON;
items_mats[2]=REFINED_IRON;
items_mats[3]=BLACKROCK;

for (i=0;i&lt;array_length_1d(items_mats);i++){
        if (n[items_mats[i]] &gt; 0){
           draw_sprite(sprite[items_mats[i]],0,48+48*i,48*1);
              if (stackable[items_mats[i]] == true){
                 draw_set_color(c_white);
                 draw_text(64+48*i,48*1,string(n[items_mats[i]]));
           }

        } 
}

//Misc

items_misc[0]=KEY_GOLDEN;

for (i=0;i&lt;array_length_1d(items_misc);i++){
        if (n[items_misc[i]] &gt; 0){
           draw_sprite(sprite[items_misc[i]],0,48+48*i,48*2);
              if (stackable[items_misc[i]] == true){
                 draw_set_color(c_white);
                 draw_text(64+48*i,48*2,string(n[items_misc[i]]));
           }

        } 
}

//Use
items_use[0]=MONEY_BAG_SMALL;

for (i=0;i&lt;array_length_1d(items_use);i++){
        if (n[items_use[i]] &gt; 0){
           draw_sprite(sprite[items_use[i]],0,48+48*i,48*3);
              if (stackable[items_use[i]] == true){
                 draw_set_color(c_white);
                 draw_text(64+48*i,48*3,string(n[items_use[i]]));
           }

        } 
}

//Eq
if (eq_show){
   draw_sprite(sprite[armor[0,tier_helmet]],0,48,48*5+48*0);
   draw_sprite(sprite[armor[1,tier_armor]],0,48,48*5+48*1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Names

////////////////////////////////
//----Array for item names----//
////////////////////////////////

//--| Armor

item_name[ARMOR_NONE]           = "Keine Rustung";
item_name[ARMOR_LEATHER]        = "Leder Rustung";
item_name[ARMOR_IRON]           = "Eisen Rustung";
item_name[ARMOR_BLACKROCK]      = "Schwazfels Rustung";
item_name[HELMET_NONE]          = "Kein Helm";
item_name[HELMET_LEATHER]       = "Leder Helm";
item_name[HELMET_IRON]          = "Eisen Helm";
item_name[HELMET_BLACKROCK]     = "Schwarzfels Helm";
item_name[BOOTS_NONE]           = "Keine Schuhe";
item_name[BOOTS_LEATHER]        = "Leder Schuhe";
item_name[BOOTS_IRON]           = "Eisen Schuhe";
item_name[BOOTS_BLACKROCK]      = "Schwarzfels Schuhe";

//--| Materials

item_name[LEATHER]              = "Leder";
item_name[IRON]                 = "Eisen";
item_name[REFINED_IRON]         = "Eisenbarren";
item_name[BLACKROCK]            = "Schwarzfels";

//--| Misc

item_name[KEY_GOLDEN]           = "Goldner Schlussel";

//--| Blueprints

item_name[BP_ARMOR_LEATHER]        = "Leder Rustung Blueprint";
item_name[BP_ARMOR_IRON]           = "Eisen Rustung Blueprint";
item_name[BP_ARMOR_BLACKROCK]      = "Schwazfels Rustung Blueprint";
item_name[BP_HELMET_LEATHER]       = "Leder Helm Blueprint";
item_name[BP_HELMET_IRON]          = "Eisen Helm Blueprint";
item_name[BP_HELMET_BLACKROCK]     = "Schwarzfels Helm Blueprint";
item_name[BP_BOOTS_LEATHER]        = "Leder Schuhe Blueprint";
item_name[BP_BOOTS_IRON]           = "Eisen Schuhe Blueprint";
item_name[BP_BOOTS_BLACKROCK]      = "Schwarzfels Schuhe Blueprint";
item_name[BP_REFINED_IRON]         = "Eisenbarren Blueprint";
item_name[BP_UPG_DMG_2]            = "Damage Upgrade 2 Blueprint";
item_name[BP_UPG_DMG_3]            = "Damage Upgrade 3 Blueprint";
item_name[BP_UPG_DMG_4]            = "Damage Upgrade 4 Blueprint";
item_name[BP_UPG_DMG_5]            = "Damage Upgrade 5 Blueprint";
item_name[BP_UPG_DMG_6]            = "Damage Upgrade 6 Blueprint";

//--| Upgrades

item_name[UPG_DMG_1]            = "Damage Upgrade 1";
item_name[UPG_DMG_2]            = "Damage Upgrade 2";
item_name[UPG_DMG_3]            = "Damage Upgrade 3";
item_name[UPG_DMG_4]            = "Damage Upgrade 4";
item_name[UPG_DMG_5]            = "Damage Upgrade 5";
item_name[UPG_DMG_6]            = "Damage Upgrade 6";

//--| Use

item_name[BATTERY_SMALL]        = "Kleine Batterie";
item_name[MONEY_BAG_SMALL]      = "Munzbeutel";
item_name[MEDIC_KIT_SMALL]      = "Kleines Medic Kit";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Sprites


//////////////////////////////////
//----Array for item sprites----//
//////////////////////////////////

//--| Armor

sprite[ARMOR_NONE]           = spr_armor_none;
sprite[ARMOR_LEATHER]        = spr_armor_leather;
sprite[ARMOR_IRON]           = spr_armor_iron;
sprite[ARMOR_BLACKROCK]      = spr_armor_blackrock;
sprite[HELMET_NONE]          = spr_helmet_none;
sprite[HELMET_LEATHER]       = spr_helmet_leather;
sprite[HELMET_IRON]          = spr_helmet_iron;
sprite[HELMET_BLACKROCK]     = spr_helmet_blackrock;
sprite[BOOTS_NONE]           = spr_boots_none;
sprite[BOOTS_LEATHER]        = spr_boots_leather;
sprite[BOOTS_IRON]           = spr_boots_iron;
sprite[BOOTS_BLACKROCK]      = spr_boots_blackrock;

//--| Materials

sprite[LEATHER]              = spr_mat_leather;
sprite[IRON]                 = spr_mat_iron;
sprite[REFINED_IRON]         = spr_mat_refined_iron;
sprite[BLACKROCK]            = spr_mat_blackrock;

//--| Misc

sprite[KEY_GOLDEN]           = spr_key_golden;

//--| Blueprints

sprite[BP_ARMOR_LEATHER]        = spr_blueprint_eq;
sprite[BP_ARMOR_IRON]           = spr_blueprint_eq;
sprite[BP_ARMOR_BLACKROCK]      = spr_blueprint_eq;
sprite[BP_HELMET_LEATHER]       = spr_blueprint_eq;
sprite[BP_HELMET_IRON]          = spr_blueprint_eq;
sprite[BP_HELMET_BLACKROCK]     = spr_blueprint_eq;
sprite[BP_BOOTS_LEATHER]        = spr_blueprint_eq;
sprite[BP_BOOTS_IRON]           = spr_blueprint_eq;
sprite[BP_BOOTS_BLACKROCK]      = spr_blueprint_eq;
sprite[BP_REFINED_IRON]         = spr_blueprint_item;
sprite[BP_UPG_DMG_2]            = spr_blueprint_upg;
sprite[BP_UPG_DMG_3]            = spr_blueprint_upg;
sprite[BP_UPG_DMG_4]            = spr_blueprint_upg;
sprite[BP_UPG_DMG_5]            = spr_blueprint_upg;
sprite[BP_UPG_DMG_6]            = spr_blueprint_upg;

//--| Upgrades

sprite[UPG_DMG_1]            = spr_upg_dmg_1;
sprite[UPG_DMG_2]            = spr_upg_dmg_2;
sprite[UPG_DMG_3]            = spr_upg_dmg_3;
sprite[UPG_DMG_4]            = spr_upg_dmg_4;
sprite[UPG_DMG_5]            = spr_upg_dmg_5;
sprite[UPG_DMG_6]            = spr_upg_dmg_6;

//--| Use

sprite[BATTERY_SMALL]        = spr_battery_small;
sprite[MONEY_BAG_SMALL]      = spr_money_bag_small;
sprite[MEDIC_KIT_SMALL]      = spr_medic_kit_small;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Icon Sprites


//////////////////////////////////
//-----Array for item icons-----//
//////////////////////////////////

//--| Armor

sprite_icon[ARMOR_NONE]           = spr_armor_none;
sprite_icon[ARMOR_LEATHER]        = spr_armor_leather;
sprite_icon[ARMOR_IRON]           = spr_armor_iron;
sprite_icon[ARMOR_BLACKROCK]      = spr_armor_blackrock;
sprite_icon[HELMET_NONE]          = spr_helmet_none;
sprite_icon[HELMET_LEATHER]       = spr_helmet_leather;
sprite_icon[HELMET_IRON]          = spr_helmet_iron;
sprite_icon[HELMET_BLACKROCK]     = spr_helmet_blackrock;
sprite_icon[BOOTS_NONE]           = spr_boots_none;
sprite_icon[BOOTS_LEATHER]        = spr_boots_leather;
sprite_icon[BOOTS_IRON]           = spr_boots_iron;
sprite_icon[BOOTS_BLACKROCK]      = spr_boots_blackrock;

//--| Materials

sprite_icon[LEATHER]              = spr_mat_leather;
sprite_icon[IRON]                 = spr_mat_iron;
sprite_icon[REFINED_IRON]         = spr_mat_refined_iron;
sprite_icon[BLACKROCK]            = spr_mat_blackrock;

//--| Misc

sprite_icon[KEY_GOLDEN]           = spr_key_golden;

//--| Blueprints

sprite_icon[BP_ARMOR_LEATHER]        = spr_blueprint_eq;
sprite_icon[BP_ARMOR_IRON]           = spr_blueprint_eq;
sprite_icon[BP_ARMOR_BLACKROCK]      = spr_blueprint_eq;
sprite_icon[BP_HELMET_LEATHER]       = spr_blueprint_eq;
sprite_icon[BP_HELMET_IRON]          = spr_blueprint_eq;
sprite_icon[BP_HELMET_BLACKROCK]     = spr_blueprint_eq;
sprite_icon[BP_BOOTS_LEATHER]        = spr_blueprint_eq;
sprite_icon[BP_BOOTS_IRON]           = spr_blueprint_eq;
sprite_icon[BP_BOOTS_BLACKROCK]      = spr_blueprint_eq;
sprite_icon[BP_REFINED_IRON]         = spr_blueprint_item;
sprite_icon[BP_UPG_DMG_2]            = spr_blueprint_upg;
sprite_icon[BP_UPG_DMG_3]            = spr_blueprint_upg;
sprite_icon[BP_UPG_DMG_4]            = spr_blueprint_upg;
sprite_icon[BP_UPG_DMG_5]            = spr_blueprint_upg;
sprite_icon[BP_UPG_DMG_6]            = spr_blueprint_upg;

//--| Upgrades

sprite_icon[UPG_DMG_1]            = spr_upg_dmg_icon;
sprite_icon[UPG_DMG_2]            = spr_upg_dmg_icon;
sprite_icon[UPG_DMG_3]            = spr_upg_dmg_icon;
sprite_icon[UPG_DMG_4]            = spr_upg_dmg_icon;
sprite_icon[UPG_DMG_5]            = spr_upg_dmg_icon;
sprite_icon[UPG_DMG_6]            = spr_upg_dmg_icon;

//--| Use

sprite_icon[BATTERY_SMALL]        = spr_battery_small;
sprite_icon[MONEY_BAG_SMALL]      = spr_money_bag_small;
sprite_icon[MEDIC_KIT_SMALL]      = spr_medic_kit_small;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Slot Sprites


//////////////////////////////////
//-----Array for item Slots-----//
//////////////////////////////////

//--| Armor

sprite_slot[ARMOR_NONE]           = spr_armor_none;
sprite_slot[ARMOR_LEATHER]        = spr_armor_leather;
sprite_slot[ARMOR_IRON]           = spr_armor_iron;
sprite_slot[ARMOR_BLACKROCK]      = spr_armor_blackrock;
sprite_slot[HELMET_NONE]          = spr_helmet_none;
sprite_slot[HELMET_LEATHER]       = spr_helmet_leather;
sprite_slot[HELMET_IRON]          = spr_helmet_iron;
sprite_slot[HELMET_BLACKROCK]     = spr_helmet_blackrock;
sprite_slot[BOOTS_NONE]           = spr_boots_none;
sprite_slot[BOOTS_LEATHER]        = spr_boots_leather;
sprite_slot[BOOTS_IRON]           = spr_boots_iron;
sprite_slot[BOOTS_BLACKROCK]      = spr_boots_blackrock;

//--| Materials

sprite_slot[LEATHER]              = spr_mat_leather;
sprite_slot[IRON]                 = spr_mat_iron;
sprite_slot[REFINED_IRON]         = spr_mat_refined_iron;
sprite_slot[BLACKROCK]            = spr_mat_blackrock;

//--| Misc

sprite_slot[KEY_GOLDEN]           = spr_key_golden;

//--| Blueprints

sprite_slot[BP_ARMOR_LEATHER]        = spr_blueprint_eq;
sprite_slot[BP_ARMOR_IRON]           = spr_blueprint_eq;
sprite_slot[BP_ARMOR_BLACKROCK]      = spr_blueprint_eq;
sprite_slot[BP_HELMET_LEATHER]       = spr_blueprint_eq;
sprite_slot[BP_HELMET_IRON]          = spr_blueprint_eq;
sprite_slot[BP_HELMET_BLACKROCK]     = spr_blueprint_eq;
sprite_slot[BP_BOOTS_LEATHER]        = spr_blueprint_eq;
sprite_slot[BP_BOOTS_IRON]           = spr_blueprint_eq;
sprite_slot[BP_BOOTS_BLACKROCK]      = spr_blueprint_eq;
sprite_slot[BP_REFINED_IRON]         = spr_blueprint_item;
sprite_slot[BP_UPG_DMG_2]            = spr_blueprint_upg;
sprite_slot[BP_UPG_DMG_3]            = spr_blueprint_upg;
sprite_slot[BP_UPG_DMG_4]            = spr_blueprint_upg;
sprite_slot[BP_UPG_DMG_5]            = spr_blueprint_upg;
sprite_slot[BP_UPG_DMG_6]            = spr_blueprint_upg;

//--| Upgrades

sprite_slot[UPG_DMG_1]            = spr_slot_upg_dmg;
sprite_slot[UPG_DMG_2]            = spr_slot_upg_dmg;
sprite_slot[UPG_DMG_3]            = spr_slot_upg_dmg;
sprite_slot[UPG_DMG_4]            = spr_slot_upg_dmg;
sprite_slot[UPG_DMG_5]            = spr_slot_upg_dmg;
sprite_slot[UPG_DMG_6]            = spr_slot_upg_dmg;

//--| Use

sprite_slot[BATTERY_SMALL]        = spr_battery_small;
sprite_slot[MONEY_BAG_SMALL]      = spr_money_bag_small;
sprite_slot[MEDIC_KIT_SMALL]      = spr_medic_kit_small;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Icon Sprite Subimages


/////////////////////////////////////
//----Array for item subimages-----//
/////////////////////////////////////

//--| Armor

sprite_sub[ARMOR_NONE]           = 0;
sprite_sub[ARMOR_LEATHER]        = 0;
sprite_sub[ARMOR_IRON]           = 0;
sprite_sub[ARMOR_BLACKROCK]      = 0;
sprite_sub[HELMET_NONE]          = 0;
sprite_sub[HELMET_LEATHER]       = 0;
sprite_sub[HELMET_IRON]          = 0;
sprite_sub[HELMET_BLACKROCK]     = 0;
sprite_sub[BOOTS_NONE]           = 0;
sprite_sub[BOOTS_LEATHER]        = 0;
sprite_sub[BOOTS_IRON]           = 0;
sprite_sub[BOOTS_BLACKROCK]      = 0;

//--| Materials

sprite_sub[LEATHER]              = 0;
sprite_sub[IRON]                 = 0;
sprite_sub[REFINED_IRON]         = 0;
sprite_sub[BLACKROCK]            = 0;

//--| Misc

sprite_sub[KEY_GOLDEN]           = 0;

//--| Blueprints

sprite_sub[BP_ARMOR_LEATHER]        = 0;
sprite_sub[BP_ARMOR_IRON]           = 0;
sprite_sub[BP_ARMOR_BLACKROCK]      = 0;
sprite_sub[BP_HELMET_LEATHER]       = 0;
sprite_sub[BP_HELMET_IRON]          = 0;
sprite_sub[BP_HELMET_BLACKROCK]     = 0;
sprite_sub[BP_BOOTS_LEATHER]        = 0;
sprite_sub[BP_BOOTS_IRON]           = 0;
sprite_sub[BP_BOOTS_BLACKROCK]      = 0;
sprite_sub[BP_REFINED_IRON]         = 0;
sprite_sub[BP_UPG_DMG_2]            = 0;
sprite_sub[BP_UPG_DMG_3]            = 0;
sprite_sub[BP_UPG_DMG_4]            = 0;
sprite_sub[BP_UPG_DMG_5]            = 0;
sprite_sub[BP_UPG_DMG_6]            = 0;

//--| Upgrades

sprite_sub[UPG_DMG_1]            = 0;
sprite_sub[UPG_DMG_2]            = 1;
sprite_sub[UPG_DMG_3]            = 2;
sprite_sub[UPG_DMG_4]            = 3;
sprite_sub[UPG_DMG_5]            = 4;
sprite_sub[UPG_DMG_6]            = 5;

//--| Use

sprite_sub[BATTERY_SMALL]        = 0;
sprite_sub[MONEY_BAG_SMALL]      = 0;
sprite_sub[MEDIC_KIT_SMALL]      = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Objects


//////////////////////////////////
//----Array for item objects----//
//////////////////////////////////

//--| Armor

object[ARMOR_NONE]           = noone;
object[ARMOR_LEATHER]        = obj_armor_leather;
object[ARMOR_IRON]           = obj_armor_iron;
object[ARMOR_BLACKROCK]      = obj_armor_blackrock;
object[HELMET_NONE]          = noone;
object[HELMET_LEATHER]       = obj_helmet_leather;
object[HELMET_IRON]          = obj_helmet_iron;
object[HELMET_BLACKROCK]     = obj_helmet_blackrock;
object[BOOTS_NONE]           = noone;
object[BOOTS_LEATHER]        = obj_boots_leather;
object[BOOTS_IRON]           = obj_boots_iron;
object[BOOTS_BLACKROCK]      = obj_boots_blackrock;

//--| Materials

object[LEATHER]              = obj_mat_leather;
object[IRON]                 = obj_mat_iron;
object[REFINED_IRON]         = obj_mat_refined_iron;
object[BLACKROCK]            = obj_mat_blackrock;

//--| Misc

object[KEY_GOLDEN]           = obj_key_golden;

//--| Blueprints

object[BP_ARMOR_LEATHER]        = obj_bp_armor_leather;
object[BP_ARMOR_IRON]           = obj_bp_armor_iron;
object[BP_ARMOR_BLACKROCK]      = obj_bp_armor_blackrock;
object[BP_HELMET_LEATHER]       = obj_bp_helmet_leather;
object[BP_HELMET_IRON]          = obj_bp_helmet_iron;
object[BP_HELMET_BLACKROCK]     = obj_bp_helmet_blackrock;
object[BP_BOOTS_LEATHER]        = obj_bp_boots_leather;
object[BP_BOOTS_IRON]           = obj_bp_boots_iron;
object[BP_BOOTS_BLACKROCK]      = obj_bp_boots_blackrock;
object[BP_REFINED_IRON]         = obj_bp_mat_refined_iron;
object[BP_UPG_DMG_2]            = obj_bp_upg_dmg_2;
object[BP_UPG_DMG_3]            = obj_bp_upg_dmg_3;
object[BP_UPG_DMG_4]            = obj_bp_upg_dmg_4;
object[BP_UPG_DMG_5]            = obj_bp_upg_dmg_5;
object[BP_UPG_DMG_6]            = obj_bp_upg_dmg_6;

//--| Upgrades

object[UPG_DMG_1]            = "obj_upg_dmg_1";
object[UPG_DMG_2]            = "obj_upg_dmg_2";
object[UPG_DMG_3]            = "obj_upg_dmg_3";
object[UPG_DMG_4]            = "obj_upg_dmg_4";
object[UPG_DMG_5]            = "obj_upg_dmg_5";
object[UPG_DMG_6]            = "obj_upg_dmg_6";

//--| Use

object[BATTERY_SMALL]        = obj_battery_small;
object[MONEY_BAG_SMALL]      = obj_money_bag_small;
object[MEDIC_KIT_SMALL]      = obj_medic_kit_small;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item stackable


/////////////////////////////////////
//----Array for item stackables----//
/////////////////////////////////////

//--| Armor

stackable[ARMOR_NONE]           = false;
stackable[ARMOR_LEATHER]        = false;
stackable[ARMOR_IRON]           = false;
stackable[ARMOR_BLACKROCK]      = false;
stackable[HELMET_NONE]          = false;
stackable[HELMET_LEATHER]       = false;
stackable[HELMET_IRON]          = false;
stackable[HELMET_BLACKROCK]     = false;
stackable[BOOTS_NONE]           = false;
stackable[BOOTS_LEATHER]        = false;
stackable[BOOTS_IRON]           = false;
stackable[BOOTS_BLACKROCK]      = false;

//--| Materials

stackable[LEATHER]              = true;
stackable[IRON]                 = true;
stackable[REFINED_IRON]         = true;
stackable[BLACKROCK]            = true;

//--| Misc

stackable[KEY_GOLDEN]           = true;

//--| Blueprints

stackable[BP_ARMOR_LEATHER]        = true;
stackable[BP_ARMOR_IRON]           = true;
stackable[BP_ARMOR_BLACKROCK]      = true;
stackable[BP_HELMET_LEATHER]       = true;
stackable[BP_HELMET_IRON]          = true;
stackable[BP_HELMET_BLACKROCK]     = true;
stackable[BP_BOOTS_LEATHER]        = true;
stackable[BP_BOOTS_IRON]           = true;
stackable[BP_BOOTS_BLACKROCK]      = true;
stackable[BP_REFINED_IRON]         = true;
stackable[BP_UPG_DMG_2]            = true;
stackable[BP_UPG_DMG_3]            = true;
stackable[BP_UPG_DMG_4]            = true;
stackable[BP_UPG_DMG_5]            = true;
stackable[BP_UPG_DMG_6]            = true;

//--| Upgrades

stackable[UPG_DMG_1]            = true;
stackable[UPG_DMG_2]            = true;
stackable[UPG_DMG_3]            = true;
stackable[UPG_DMG_4]            = true;
stackable[UPG_DMG_5]            = true;
stackable[UPG_DMG_6]            = true;

//--| Use

stackable[BATTERY_SMALL]        = true;
stackable[MONEY_BAG_SMALL]      = true;
stackable[MEDIC_KIT_SMALL]      = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item count_n


/////////////////////////////////////
//------Array for item count-------//
/////////////////////////////////////

//--| Armor

n[ARMOR_NONE]           = 1;
n[ARMOR_LEATHER]        = 0;
n[ARMOR_IRON]           = 0;
n[ARMOR_BLACKROCK]      = 0;
n[HELMET_NONE]          = 1;
n[HELMET_LEATHER]       = 0;
n[HELMET_IRON]          = 0;
n[HELMET_BLACKROCK]     = 0;
n[BOOTS_NONE]           = 1;
n[BOOTS_LEATHER]        = 0;
n[BOOTS_IRON]           = 0;
n[BOOTS_BLACKROCK]      = 0;

//--| Materials

n[LEATHER]              = 0;
n[IRON]                 = 0;
n[REFINED_IRON]         = 0;
n[BLACKROCK]            = 0;

//--| Misc

n[KEY_GOLDEN]           = 0;

//--| Blueprints

n[BP_ARMOR_LEATHER]        = 0;
n[BP_ARMOR_IRON]           = 0;
n[BP_ARMOR_BLACKROCK]      = 0;
n[BP_HELMET_LEATHER]       = 0;
n[BP_HELMET_IRON]          = 0;
n[BP_HELMET_BLACKROCK]     = 0;
n[BP_BOOTS_LEATHER]        = 0;
n[BP_BOOTS_IRON]           = 0;
n[BP_BOOTS_BLACKROCK]      = 0;
n[BP_REFINED_IRON]         = 0;
n[BP_UPG_DMG_2]            = 0;
n[BP_UPG_DMG_3]            = 0;
n[BP_UPG_DMG_4]            = 0;
n[BP_UPG_DMG_5]            = 0;
n[BP_UPG_DMG_6]            = 0;

//--| Upgrades

n[UPG_DMG_1]            = 10;
n[UPG_DMG_2]            = 0;
n[UPG_DMG_3]            = 0;
n[UPG_DMG_4]            = 0;
n[UPG_DMG_5]            = 0;
n[UPG_DMG_6]            = 0;

//--| Use

n[BATTERY_SMALL]        = 0;
n[MONEY_BAG_SMALL]      = 0;
n[MEDIC_KIT_SMALL]      = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Scripts


//////////////////////////////////
//----Array for item scripts----//
//////////////////////////////////

//--| Armor
script[ARMOR_NONE]           = noone;
script[ARMOR_LEATHER]        = noone;
script[ARMOR_IRON]           = noone;
script[ARMOR_BLACKROCK]      = noone;
script[HELMET_NONE]          = noone;
script[HELMET_LEATHER]       = noone;
script[HELMET_IRON]          = noone;
script[HELMET_BLACKROCK]     = noone;
script[BOOTS_NONE]           = noone;
script[BOOTS_LEATHER]        = noone;
script[BOOTS_IRON]           = noone;
script[BOOTS_BLACKROCK]      = noone;

//--| Materials

script[LEATHER]              = noone;
script[IRON]                 = noone;
script[REFINED_IRON]         = noone;
script[BLACKROCK]            = noone;

//--| Misc

script[KEY_GOLDEN]           = noone;

//--| Blueprints

script[BP_ARMOR_LEATHER]        = noone;
script[BP_ARMOR_IRON]           = noone;
script[BP_ARMOR_BLACKROCK]      = noone;
script[BP_HELMET_LEATHER]       = noone;
script[BP_HELMET_IRON]          = noone;
script[BP_HELMET_BLACKROCK]     = noone;
script[BP_BOOTS_LEATHER]        = noone;
script[BP_BOOTS_IRON]           = noone;
script[BP_BOOTS_BLACKROCK]      = noone;
script[BP_REFINED_IRON]         = noone;
script[BP_UPG_DMG_2]            = noone;
script[BP_UPG_DMG_3]            = noone;
script[BP_UPG_DMG_4]            = noone;
script[BP_UPG_DMG_5]            = noone;
script[BP_UPG_DMG_6]            = noone;

//--| Upgrades

script[UPG_DMG_1]            = noone;
script[UPG_DMG_2]            = noone;
script[UPG_DMG_3]            = noone;
script[UPG_DMG_4]            = noone;
script[UPG_DMG_5]            = noone;
script[UPG_DMG_6]            = noone;

//--| Use

script[BATTERY_SMALL]        = scr_use_battery;
script[MONEY_BAG_SMALL]      = scr_use_money_bag;
script[MEDIC_KIT_SMALL]      = scr_use_medic_kit;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Info texts


/////////////////////////////////////
//----Array for item info texts----//
/////////////////////////////////////

//--| Armor

info_text[ARMOR_NONE]           = "Keine Rustung";
info_text[ARMOR_LEATHER]        = "Die wohl schlechteste Rüstung die man weit und breit finden kann";
info_text[ARMOR_IRON]           = "Etwas besser aber immer noch SCHLECHT";
info_text[ARMOR_BLACKROCK]      = "";
info_text[HELMET_NONE]          = "Kein Helm";
info_text[HELMET_LEATHER]       = "Es macht kaum einen Unterschied ob man diesen Helm trägt oder nicht da er ja nichtmal wirklich ein Helm ist";
info_text[HELMET_IRON]          = "Suckt immer noch ziemlich hart";
info_text[HELMET_BLACKROCK]     = "";
info_text[BOOTS_NONE]          = "Keine Schuhe";
info_text[BOOTS_LEATHER]       = "";
info_text[BOOTS_IRON]          = "";
info_text[BOOTS_BLACKROCK]     = "";

//--| Materials

info_text[LEATHER]              = "Wird für schwache Rüstungen verwendet";
info_text[IRON]                 = "";
info_text[REFINED_IRON]         = "Wird für die zweiten Rüstungsteile verwendet";
info_text[BLACKROCK]            = "";

//--| Misc

info_text[KEY_GOLDEN]           = "[c=12632256]Glitzert golden[/c]";

//--| Blueprints

info_text[BP_ARMOR_LEATHER]        = "";
info_text[BP_ARMOR_IRON]           = "";
info_text[BP_ARMOR_BLACKROCK]      = "";
info_text[BP_HELMET_LEATHER]       = "";
info_text[BP_HELMET_IRON]          = "";
info_text[BP_HELMET_BLACKROCK]     = "";
info_text[BP_BOOTS_LEATHER]        = "";
info_text[BP_BOOTS_IRON]           = "";
info_text[BP_BOOTS_BLACKROCK]      = "";
info_text[BP_REFINED_IRON]         = "";
info_text[BP_UPG_DMG_2]            = "";
info_text[BP_UPG_DMG_3]            = "";
info_text[BP_UPG_DMG_4]            = "";
info_text[BP_UPG_DMG_5]            = "";
info_text[BP_UPG_DMG_6]            = "";

//--| Upgrades

info_text[UPG_DMG_1]            = "";
info_text[UPG_DMG_2]            = "";
info_text[UPG_DMG_3]            = "";
info_text[UPG_DMG_4]            = "";
info_text[UPG_DMG_5]            = "";
info_text[UPG_DMG_6]            = "";

//--| Use

info_text[BATTERY_SMALL]        = "";
info_text[MONEY_BAG_SMALL]      = "[c=12632256]Ein paar Münzen[/c]";
info_text[MEDIC_KIT_SMALL]      = "[c=12632256]Heilt ein kleines bisschen[/c]";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item values


//////////////////////////////////
//----Array for item values----///
//////////////////////////////////

//--| Armor

value[ARMOR_NONE]           = 0;
value[ARMOR_LEATHER]        = 250;
value[ARMOR_IRON]           = 400;
value[ARMOR_BLACKROCK]      = 600;
value[HELMET_NONE]          = 0;
value[HELMET_LEATHER]       = 150;
value[HELMET_IRON]          = 200;
value[HELMET_BLACKROCK]     = 300;
value[BOOTS_NONE]           = 0;
value[BOOTS_LEATHER]        = 150;
value[BOOTS_IRON]           = 200;
value[BOOTS_BLACKROCK]      = 300;

//--| Materials

value[LEATHER]              = 20;
value[IRON]                 = 30;
value[REFINED_IRON]         = 35;
value[BLACKROCK]            = 40;

//--| Misc

value[KEY_GOLDEN]           = 100;

//--| Blueprints

value[BP_ARMOR_LEATHER]        = 100;
value[BP_ARMOR_IRON]           = 100;
value[BP_ARMOR_BLACKROCK]      = 100;
value[BP_HELMET_LEATHER]       = 100;
value[BP_HELMET_IRON]          = 100;
value[BP_HELMET_BLACKROCK]     = 100;
value[BP_BOOTS_LEATHER]        = 100;
value[BP_BOOTS_IRON]           = 100;
value[BP_BOOTS_BLACKROCK]      = 100;
value[BP_REFINED_IRON]         = 100;
value[BP_UPG_DMG_2]            = 100;
value[BP_UPG_DMG_3]            = 100;
value[BP_UPG_DMG_4]            = 100;
value[BP_UPG_DMG_5]            = 100;
value[BP_UPG_DMG_6]            = 100;

//--| Upgrades

value[UPG_DMG_1]            = 200;
value[UPG_DMG_2]            = 500;
value[UPG_DMG_3]            = 1000;
value[UPG_DMG_4]            = 5000;
value[UPG_DMG_5]            = 20000;
value[UPG_DMG_6]            = 200000;

//--| Use

value[BATTERY_SMALL]        = 50;
value[MONEY_BAG_SMALL]      = 0;
value[MEDIC_KIT_SMALL]      = 150;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item hp


//////////////////////////////////
//------Array for item hp------///
//////////////////////////////////

//--| Armor

item_hp[ARMOR_NONE]           = 5;
item_hp[ARMOR_LEATHER]        = 30;
item_hp[ARMOR_IRON]           = 45;
item_hp[ARMOR_BLACKROCK]      = 65;
item_hp[HELMET_NONE]          = 0;
item_hp[HELMET_LEATHER]       = 10;
item_hp[HELMET_IRON]          = 15;
item_hp[HELMET_BLACKROCK]     = 25;
item_hp[BOOTS_NONE]           = 0;
item_hp[BOOTS_LEATHER]        = 5;
item_hp[BOOTS_IRON]           = 8;
item_hp[BOOTS_BLACKROCK]      = 15;

//--| Materials

item_hp[LEATHER]              = 0;
item_hp[IRON]                 = 0;
item_hp[REFINED_IRON]         = 0;
item_hp[BLACKROCK]            = 0;

//--| Misc

item_hp[KEY_GOLDEN]           = 0;

//--| Blueprints

item_hp[BP_ARMOR_LEATHER]        = 0;
item_hp[BP_ARMOR_IRON]           = 0;
item_hp[BP_ARMOR_BLACKROCK]      = 0;
item_hp[BP_HELMET_LEATHER]       = 0;
item_hp[BP_HELMET_IRON]          = 0;
item_hp[BP_HELMET_BLACKROCK]     = 0;
item_hp[BP_BOOTS_LEATHER]        = 0;
item_hp[BP_BOOTS_IRON]           = 0;
item_hp[BP_BOOTS_BLACKROCK]      = 0;
item_hp[BP_REFINED_IRON]         = 0;
item_hp[BP_UPG_DMG_2]            = 0;
item_hp[BP_UPG_DMG_3]            = 0;
item_hp[BP_UPG_DMG_4]            = 0;
item_hp[BP_UPG_DMG_5]            = 0;
item_hp[BP_UPG_DMG_6]            = 0;

//--| Upgrades

item_hp[UPG_DMG_1]            = 0;
item_hp[UPG_DMG_2]            = 0;
item_hp[UPG_DMG_3]            = 0;
item_hp[UPG_DMG_4]            = 0;
item_hp[UPG_DMG_5]            = 0;
item_hp[UPG_DMG_6]            = 0;

//--| Use

item_hp[BATTERY_SMALL]        = 0;
item_hp[MONEY_BAG_SMALL]      = 0;
item_hp[MEDIC_KIT_SMALL]      = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables and recipes

//----Variables----
globalvar recipe;
globalvar recipe_n;
globalvar recipe_blueprint;
globalvar ingredients;
globalvar ingredients_n;

globalvar item_name;
globalvar sprite;
globalvar sprite_icon;
globalvar sprite_sub;
globalvar sprite_slot;
globalvar object;
globalvar stackable;
globalvar n;
globalvar script;
globalvar info_text;
globalvar value;
globalvar item_hp;
globalvar type;
globalvar tier_helmet;
globalvar tier_armor;
globalvar tier_boots;
globalvar draw;
globalvar armor;

eq_show = false;

//Inventory
itembox_start_x = 300;
x_offset = 16;

mats_x = 0;
misc_x = 0;
use_x  = 0;
bp_x   = 0;

//Armor
armor[0,0] = HELMET_NONE;
armor[0,1] = HELMET_LEATHER;
armor[0,2] = HELMET_IRON;
armor[0,3] = HELMET_BLACKROCK;

armor[1,0] = ARMOR_NONE;
armor[1,1] = ARMOR_LEATHER;
armor[1,2] = ARMOR_IRON;
armor[1,3] = ARMOR_BLACKROCK;

armor[2,0] = BOOTS_NONE;
armor[2,1] = BOOTS_LEATHER;
armor[2,2] = BOOTS_IRON;
armor[2,3] = BOOTS_BLACKROCK;

//----Recipes----
/*
recipe[list,recipe_number] = item
recipe_n[list,recipe_number] = mats count
list={
      1 = helmet;
      2 = armor;
      }

ingredients[list,recipe_number] = mats
ingredients_n[list,recipe_number] = mats count
*/
recipe[31999,31999]             = "";
recipe_n[31999,31999]           = "";
recipe_blueprint[31999,31999]   = "";
ingredients[31999,31999]        = "";
ingredients_n[31999,31999]      = "";
//----Recipes----
//Helmets[0] - Recipies
recipe[0,0]               = HELMET_LEATHER;
recipe_n[0,0]             = 1;
recipe_blueprint[0,0]     = BP_HELMET_LEATHER;
recipe[0,1]               = HELMET_IRON;
recipe_n[0,1]             = 1;
recipe_blueprint[0,1]     = BP_HELMET_IRON;
recipe[0,2]               = HELMET_BLACKROCK;
recipe_n[0,2]             = 1;
recipe_blueprint[0,2]     = BP_HELMET_BLACKROCK;

//Armors[1] - Recipies
recipe[1,0]               = ARMOR_LEATHER;
recipe_n[1,0]             = 1;
recipe_blueprint[1,0]     = BP_ARMOR_LEATHER;
recipe[1,1]               = ARMOR_IRON;
recipe_n[1,1]             = 1;
recipe_blueprint[1,1]     = BP_ARMOR_IRON;
recipe[1,2]               = ARMOR_BLACKROCK;
recipe_n[1,2]             = 1;
recipe_blueprint[1,2]     = BP_ARMOR_BLACKROCK;

//Boots[2] - Recipies
recipe[2,0]               = BOOTS_LEATHER;
recipe_n[2,0]             = 1;
recipe_blueprint[2,0]     = BP_BOOTS_LEATHER;
recipe[2,1]               = BOOTS_IRON;
recipe_n[2,1]             = 1;
recipe_blueprint[2,1]     = BP_BOOTS_IRON;
recipe[2,2]               = BOOTS_BLACKROCK;
recipe_n[2,2]             = 1;
recipe_blueprint[2,2]     = BP_BOOTS_BLACKROCK;

//Items[3] - Recipies
recipe[3,0]               = REFINED_IRON;
recipe_n[3,0]             = 1;
recipe_blueprint[3,0]     = BP_REFINED_IRON;

//Upgrades[4] - Recipies
recipe[4,0]               = UPG_DMG_2;
recipe_n[4,0]             = 1;
recipe_blueprint[4,0]     = BP_UPG_DMG_2;
recipe[4,1]               = UPG_DMG_3;
recipe_n[4,1]             = 1;
recipe_blueprint[4,1]     = BP_UPG_DMG_3;
recipe[4,2]               = UPG_DMG_4;
recipe_n[4,2]             = 1;
recipe_blueprint[4,2]     = BP_UPG_DMG_4;
recipe[4,3]               = UPG_DMG_5;
recipe_n[4,3]             = 1;
recipe_blueprint[4,3]     = BP_UPG_DMG_5;
recipe[4,4]               = UPG_DMG_6;
recipe_n[4,4]             = 1;
recipe_blueprint[4,4]     = BP_UPG_DMG_6;

//----ingredients----
//Helmets[0] - ingredients
ingredients[0,0]        = LEATHER;
ingredients_n[0,0]      = 5;
ingredients[0,1]        = IRON;
ingredients_n[0,1]      = 5;
ingredients[0,2]        = BLACKROCK;
ingredients_n[0,2]      = 5;

//Armors[1] - ingredients
ingredients[1,0]        = LEATHER;
ingredients_n[1,0]      = 10;
ingredients[1,1]        = IRON;
ingredients_n[1,1]      = 10;
ingredients[1,2]        = BLACKROCK;
ingredients_n[1,2]      = 10;

//Boots[2] - ingredients
ingredients[2,0]        = LEATHER;
ingredients_n[2,0]      = 5;
ingredients[2,1]        = IRON;
ingredients_n[2,1]      = 5;
ingredients[2,2]        = BLACKROCK;
ingredients_n[2,2]      = 5;

//Items[3] - ingredients
ingredients[3,0]        = IRON;
ingredients_n[3,0]      = 2;

//Upgrades[4] - ingredients
ingredients[4,0]        = UPG_DMG_1;
ingredients_n[4,0]      = 3;
ingredients[4,1]        = UPG_DMG_2;
ingredients_n[4,1]      = 3;
ingredients[4,2]        = UPG_DMG_3;
ingredients_n[4,2]      = 3;
ingredients[4,3]        = UPG_DMG_4;
ingredients_n[4,3]      = 3;
ingredients[4,4]        = UPG_DMG_5;
ingredients_n[4,4]      = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw control
scr_input();

if (key_eq){
   if (eq_show){
      eq_show = false;
   } else {
      eq_show = true;
   }
}

//----Tier----
//Helmets[0]
if (n[armor[0,3]] == 1)     {tier_helmet = 3;}
else if (n[armor[0,2]] == 1){tier_helmet = 2;}
else if (n[armor[0,1]] == 1){tier_helmet = 1;}
else                        {tier_helmet = 0;}

//Armors[1]
if (n[armor[1,3]] == 1)     {tier_armor = 3;}
else if (n[armor[1,2]] == 1){tier_armor = 2;}
else if (n[armor[1,1]] == 1){tier_armor = 1;}
else                        {tier_armor = 0;}

//Boots[2]
if (n[armor[2,3]] == 1)     {tier_boots = 3;}
else if (n[armor[2,2]] == 1){tier_boots = 2;}
else if (n[armor[2,1]] == 1){tier_boots = 1;}
else                        {tier_boots = 0;}

//----HP----
obj_stat.stat[0] = item_hp[armor[0,tier_helmet]] + item_hp[armor[1,tier_armor]] + item_hp[armor[2,tier_boots]];
obj_stat.stat[1] = min(obj_stat.stat[0],obj_stat.stat[1]); //Anti-Overhealing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the inventory
//--Arrays--
//Mats

    items_mats[0]=LEATHER;
    items_mats[1]=IRON;
    items_mats[2]=REFINED_IRON;
    items_mats[3]=BLACKROCK;
    
//Misc

    items_misc[0]=KEY_GOLDEN;
    items_misc[1]=UPG_DMG_1;
    items_misc[2]=UPG_DMG_2;
    items_misc[3]=UPG_DMG_3;
    items_misc[4]=UPG_DMG_4;
    items_misc[5]=UPG_DMG_5;
    items_misc[6]=UPG_DMG_6;
    
//Use

    items_use[0]=MONEY_BAG_SMALL;
    items_use[1]=MEDIC_KIT_SMALL;
    items_use[2]=BATTERY_SMALL;
    
//Blueprints

    items_bp[0]=BP_ARMOR_LEATHER;
    items_bp[1]=BP_ARMOR_IRON;
    items_bp[2]=BP_ARMOR_BLACKROCK;
    items_bp[3]=BP_HELMET_LEATHER;
    items_bp[4]=BP_HELMET_IRON;
    items_bp[5]=BP_HELMET_BLACKROCK;
    items_bp[6]=BP_BOOTS_LEATHER;
    items_bp[7]=BP_BOOTS_IRON;
    items_bp[8]=BP_BOOTS_BLACKROCK;
    items_bp[9]=BP_REFINED_IRON;
    items_bp[10]=BP_UPG_DMG_2;
    items_bp[11]=BP_UPG_DMG_3;
    items_bp[12]=BP_UPG_DMG_4;
    items_bp[13]=BP_UPG_DMG_5;
    items_bp[14]=BP_UPG_DMG_6;

//--Draw the inventory--   

if (eq_show){
//Box
   draw_rectangle(224,296,828,680,true);
   draw_line(itembox_start_x,296,itembox_start_x,680); //Eq/Item abgrenzung
   draw_line(itembox_start_x,392,828,392);
   draw_line(itembox_start_x,488,828,488);
   draw_line(itembox_start_x,584,828,584);
   
//Eq
   draw_sprite(sprite[armor[0,tier_helmet]],0,240,48*6.5);
   draw_sprite(sprite[armor[1,tier_armor]],0,240,48*7.5);
   draw_sprite(sprite[armor[2,tier_boots]],0,240,48*8.5);
   
   draw_text(272,48*6.5,item_hp[armor[0,tier_helmet]]);
   draw_text(272,48*7.5,item_hp[armor[1,tier_armor]]);
   draw_text(272,48*8.5,item_hp[armor[2,tier_boots]]);
   if (obj_stat.stat[0] &gt; 9){
      draw_line(270,48*9.5-4,294,48*9.5-4)
   } else {
      draw_line(270,48*9.5-4,283,48*9.5-4)
   }
   draw_text(272,48*9.5,obj_stat.stat[0]);

//--Items--

//Mats
    
    for (i=0;i&lt;array_length_1d(items_mats);i++){ 
            if i &gt;= 10 mats_y = 7.5 else mats_y = 6.5;
            if (n[items_mats[i]] &gt; 0){
               draw_sprite(sprite[items_mats[i]],0,itembox_start_x+x_offset+48*i,48*mats_y);
                  if (stackable[items_mats[i]] == true){
                     draw_set_color(c_white);
                     draw_text(itembox_start_x+x_offset*2+48*i,48*mats_y,string(n[items_mats[i]]));
               }
    
            }
    }

//Misc
    
    for (i=0;i&lt;array_length_1d(items_misc);i++){
            if i &gt;= 10 misc_y = 9.5 else misc_y = 8.5;
            if (n[items_misc[i]] &gt; 0){
               draw_sprite(sprite[items_misc[i]],0,itembox_start_x+x_offset+48*i,48*misc_y);
                  if (stackable[items_misc[i]] == true){
                     draw_set_color(c_white);
                     draw_text(itembox_start_x+x_offset*2+48*i,48*misc_y,string(n[items_misc[i]]));
               }
    
            } 
    }

//Use
    
    for (i=0;i&lt;array_length_1d(items_use);i++){
            if i &gt;= 10 use_y = 11.5 else use_y = 10.5;                                   
            if (n[items_use[i]] &gt; 0){
               draw_sprite(sprite[items_use[i]],0,itembox_start_x+x_offset+48*i,48*use_y);
                  if (stackable[items_use[i]] == true){
                     draw_set_color(c_white);
                     draw_text(itembox_start_x+x_offset*2+48*i,48*use_y,string(n[items_use[i]]));
               }
    
            } 
    }

//Blueprints
    
    for (i=0;i&lt;array_length_1d(items_bp);i++){
            if i &gt;= 10 bp_y = 13.5 else bp_y = 12.5;
            if (n[items_bp[i]] &gt; 0){
               draw_sprite(sprite[items_bp[i]],0,itembox_start_x+x_offset+48*i,48*bp_y);
                  if (stackable[items_bp[i]] == true){
                     draw_set_color(c_white);
                     draw_text(itembox_start_x+x_offset*2+48*i,48*bp_y,string(n[items_bp[i]]));
               }
    
            } 
    }
} //eq_show end

if obj_player.i==array_length_1d(items_use)-1 i_next=/*obj_player.i=*/0 else i_next=obj_player.i++; 
if obj_player.i==0 i_prev=/*obj_player.i=*/array_length_1d(items_use) else i_prev=obj_player.i--; 

draw_set_halign(fa_center);                                 //Use Draw
//draw_text(680+96,580,string(item_name[items_use[i_next]]));
draw_sprite(sprite[items_use[i_next]],0,920+96,820);

draw_text(920,820+32,string(item_name[items_use[obj_player.i]]));
draw_sprite(sprite[items_use[obj_player.i]],0,920,820);

//draw_text(680-128,580,string(item_name[items_use[i_prev]]));
draw_sprite(sprite[items_use[i_prev]],0,920-112,820);
draw_set_halign(fa_left);  
                                                            //Use Draw-end
                                                            
/*Gute Array version
for (i=0;i&lt;array_length_1d(n);i++){
        if (n[i] &gt; 0) &amp;&amp; (type[i] == "mat"){
           draw_sprite(sprite[i],0,48+48*j,48*1);
              if (stackable[i] == true){
                 draw_set_color(c_white);
                 draw_text(64+48*j,48*1,string(n[i]));
           }

        } 
}
*/                                                            
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

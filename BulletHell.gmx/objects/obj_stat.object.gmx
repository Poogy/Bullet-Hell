<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//---Single Variables---
stats_show = false;
money = 0;

useable_weapon_upgrade = false; //Weapon upgrade
useable_forge = false;

//---Stats---
stat[0]=5;      //maxhp
stat[1]=5;      //hp
stat[2]=3;      //spd
stat[3]=0;      //current selected bullet
stat[4]=100;    //Max Battery
stat[5]=100;    //Battery

bullet[0,0]=0; //Acc
bullet[1,0]=0;
bullet[2,0]=0;
bullet[3,0]=0;

bullet[0,1]=2; //DMG
bullet[1,1]=2;
bullet[2,1]=1;
bullet[3,1]=1;

bullet[0,2]=1; //LVL
bullet[1,2]=1;
bullet[2,2]=1;
bullet[3,2]=1

bullet[0,3]=0; //XP
bullet[1,3]=0;
bullet[2,3]=0;
bullet[3,3]=0;

bullet[0,4]=0; //SP
bullet[1,4]=0;
bullet[2,4]=0;
bullet[3,4]=0;

bullet[0,5]=0; //Scale
bullet[1,5]=0;
bullet[2,5]=0;
bullet[3,5]=0;

bullet[0,6]=10; //Atk spd
bullet[1,6]=5;
bullet[2,6]=20;
bullet[3,6]=10;

bullet[0,7]=0.2; //Crit chance
bullet[1,7]=0.2;
bullet[2,7]=0.2;
bullet[3,7]=0.2;

bullet[0,8]=1.5; //Crit multiplier
bullet[1,8]=1.5;
bullet[2,8]=1.5;
bullet[3,8]=1.5;

bullet[0,9]=0.01; //Lifesteal
bullet[1,9]=0.01;
bullet[2,9]=0.01;
bullet[3,9]=0.01;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level-UP
lvl_constant = 10+10*(power(bullet[stat[3],2],3/2));

if bullet[stat[3],2] != 20{
    //old system - if (bullet[stat[3],3]&gt;=10+10*(bullet[stat[3],2]*log10(bullet[stat[3],2]))){
    if (bullet[stat[3],3]&gt;=lvl_constant){
       bullet[stat[3],3]=0; //XP reset
       bullet[stat[3],2]++; //Level-UP
       bullet[stat[3],4]++; //SP++
    }
}

//Draw control
scr_input();

if (key_stats){
   if (stats_show){
      stats_show = false;
   } else {
      stats_show = true;
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (stats_show){
   draw_set_colour(c_white);
   draw_text(600,580, "Money: " +string(money));
   draw_text(600,600, "HP: "    +string(stat[1])+"/"+string(stat[0]));
   draw_text(600,620, "Speed: " +string(stat[2]));
   draw_text(600,640, "Bullet: "+string(stat[3]));
   draw_text(600,680, "Acc_00: "+string(bullet[0,0]));
   draw_text(740,680, "Acc_01: "+string(bullet[1,0]));
   draw_text(880,680, "Acc_02: "+string(bullet[2,0]));
   draw_text(1020,680,"Acc_03: "+string(bullet[3,0]));
   draw_text(600,700, "Dmg_00: "+string(bullet[0,1]));
   draw_text(740,700, "Dmg_01: "+string(bullet[1,1]));
   draw_text(880,700, "Dmg_02: "+string(bullet[2,1]));
   draw_text(1020,700,"Dmg_03: "+string(bullet[3,1]));
   draw_text(600,720, "Scl_00: "+string(bullet[0,5]));
   draw_text(740,720, "Scl_01: "+string(bullet[1,5]));
   draw_text(880,720, "Scl_02: "+string(bullet[2,5]));
   draw_text(1020,720,"Scl_03: "+string(bullet[3,5]));
   draw_text(600,740, "LvL_00: "+string(bullet[0,2]));
   draw_text(740,740, "LvL_01: "+string(bullet[1,2]));
   draw_text(880,740, "LvL_02: "+string(bullet[2,2]));
   draw_text(1020,740,"LvL_03: "+string(bullet[3,2]));
   draw_text(600,760, "XP_00: " +string(bullet[0,3])+"/"+string(10+10*(power(bullet[0,2],3/2))));
   draw_text(740,760, "XP_01: " +string(bullet[1,3])+"/"+string(10+10*(power(bullet[1,2],3/2))));
   draw_text(880,760, "XP_02: " +string(bullet[2,3])+"/"+string(10+10*(power(bullet[2,2],3/2))));
   draw_text(1020,760,"XP_03: " +string(bullet[3,3])+"/"+string(10+10*(power(bullet[3,2],3/2))));
   draw_text(600,780, "SPD_00: "+string(bullet[0,6]));
   draw_text(740,780, "SPD_01: "+string(bullet[1,6]));
   draw_text(880,780, "SPD_02: "+string(bullet[2,6]));
   draw_text(1020,780,"SPD_03: "+string(bullet[3,6]));
   draw_text(600,800, "CRC_00: "+string(bullet[0,7]));
   draw_text(740,800, "CRC_01: "+string(bullet[1,7]));
   draw_text(880,800, "CRC_02: "+string(bullet[2,7]));
   draw_text(1020,800,"CRC_03: "+string(bullet[3,7]));
   draw_text(600,820, "CRM_00: "+string(bullet[0,8]));
   draw_text(740,820, "CRM_01: "+string(bullet[1,8]));
   draw_text(880,820, "CRM_02: "+string(bullet[2,8]));
   draw_text(1020,820,"CRM_03: "+string(bullet[3,8]));
}

draw_sprite(spr_slot,0,1712,976);
draw_text(1712,992,string(obj_stat.stat[3]));

for (j=0;j&lt;2;j++){
    for (i=1;i&lt;5;i++){
        draw_sprite_ext(spr_slot,0,1712+32*i,976+32*j,1,1,0,c_white,0.5);
    }
}

if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 3  draw_sprite(spr_slot,0,1712+32,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 5  draw_sprite(spr_slot,0,1712+32*2,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 8  draw_sprite(spr_slot,0,1712+32*3,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 11 draw_sprite(spr_slot,0,1712+32*4,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 13 draw_sprite(spr_slot,0,1712+32*5,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 15 draw_sprite(spr_slot,0,1712+32*6,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 18 draw_sprite(spr_slot,0,1712+32*7,976);
if obj_stat.bullet[obj_stat.stat[3],2] &gt;= 20 draw_sprite(spr_slot,0,1712+32*8,976);

if (room!=rm_skill){
//Health
    draw_healthbar(16,1040,128,1008,(obj_stat.stat[1]/obj_stat.stat[0])*100,c_gray,c_maroon,c_green,0,true,true);
    draw_text(144,1024,string(obj_stat.stat[1])+"/"+string(obj_stat.stat[0]));
//Battery
    draw_healthbar(16,992,128,976,(obj_stat.stat[5]/obj_stat.stat[4])*100,c_gray,c_navy,c_aqua,0,true,true);
    draw_text(144,984,string(obj_stat.stat[5])+"/"+string(obj_stat.stat[4]));
//EXP
    draw_healthbar(144,1088,1696,1072,(obj_stat.bullet[obj_stat.stat[3],3]/lvl_constant)*100,c_gray,c_yellow,c_lime,0,true,true);
    draw_set_halign(fa_center);
    draw_text(920,1056,"EXP: "+string(obj_stat.bullet[obj_stat.stat[3],3])+"/"+string(lvl_constant));
    draw_set_halign(fa_left);
    draw_text(88,1064,"LVL: "+string(obj_stat.bullet[obj_stat.stat[3],2]));
} else {
    draw_text(48,80,"SP: "+string(obj_stat.bullet[obj_stat.stat[3],4]));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

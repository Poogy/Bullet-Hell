<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//---Variables---
vspeed=0;
hspeed=0;

i=0;

bullet[0]=5;
bullet[1]=25;
bullet[2]=20;

shoot=false;
laser=1;

//Boots bug beheben
tier_boots = 0;

//Dash
dash=0;
dash_max=3;
dash_cd=false;
dash_time=20;
dash_spd=20;

//Initiate Camera
instance_create(x,y,obj_view);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dash=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed=0;
vspeed=0;
direction=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shoot=false;
dash_cd=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Steuerung vom Spieler
scr_input();
//Movement
if (!dash_cd) {
    if key_left &amp;&amp; key_right hspeed=0;
    else if !key_left &amp;&amp; !key_right hspeed=0;
    if key_left hspeed=-obj_stat.stat[2];
    if key_right hspeed=obj_stat.stat[2];
    
    if key_up &amp;&amp; key_down vspeed=0;
    else if !key_up &amp;&amp; !key_down vspeed=0;
    if key_up vspeed=-obj_stat.stat[2];
    if key_down vspeed=obj_stat.stat[2];
}

//Collisions
if hspeed!=0{
   if !place_free(x+hspeed,y){
      if hspeed&gt;0 move_contact_solid(0,hspeed);
      if hspeed&lt;0 move_contact_solid(180,-hspeed);
      hspeed=0;
   }
}

if vspeed!=0{
   if !place_free(x+hspeed,y+vspeed){
      if vspeed&gt;0 move_contact_solid(270,vspeed);
      if vspeed&lt;0 move_contact_solid(90,-vspeed);
      vspeed=0;
   }
}

//Bullet wechseln
if (keyboard_check_pressed(ord('1')))obj_stat.stat[3]=0;
if (keyboard_check_pressed(ord('2')))obj_stat.stat[3]=1;
if (keyboard_check_pressed(ord('3')))obj_stat.stat[3]=2;
if (keyboard_check_pressed(ord('4')))obj_stat.stat[3]=3;

//---Use-Item---
//wechseln
if key_scroll_up {
    if (i &lt; array_length_1d(obj_inventory.items_use)-1){
        if n[obj_inventory.items_use[i]] &lt;= 0 i++;
    }else i=0;
}
if key_scroll_down {
    if (i &gt; 0){
        if n[obj_inventory.items_use[i]] &lt;= 0 i--;
    }else i=array_length_1d(obj_inventory.items_use)-1;
}

//verwenden
if key_use_item{
   if n[obj_inventory.items_use[i]] &gt; 0{
      scr_remove_item(obj_inventory.items_use[i],1);
      script_execute(script[obj_inventory.items_use[i]]);
   }
}

//Spielerbewegung animiert
image_angle=point_direction(x,y,mouse_x,mouse_y)-90;

//Schie√üen
if (!shoot &amp;&amp; key_shoot) {
    shoot=true;
    //Bullet 0: Pistol
    if obj_stat.stat[3]==0 {
        alarm[0]=obj_stat.bullet[0,6];
        instance_create(x,y,obj_bullet);
    }
    //Bullet 1: SMG
    else if obj_stat.stat[3]==1 {
        alarm[0]=obj_stat.bullet[1,6];
        instance_create(x,y,obj_bullet);
    }
    //Bullet 2: "Heimer W"
    else if obj_stat.stat[3]==2 {
        alarm[0]=obj_stat.bullet[2,6];
        repeat 3 instance_create(x,y,obj_bullet);
    }
    //Bullet 3: AOE
    else if obj_stat.stat[3]==3 {
        shoot=0;
        alarm[0]=obj_stat.bullet[3,6];
        instance_create(x,y,obj_bullet);
    }
}

//---Dash---
//Stats
if tier_boots == 0{
   dash_max=3;
   dash_time=18;
   dash_spd=22;
} else if tier_boots == 1{
   dash_max=3;
   dash_time=16;
   dash_spd=24;
} else if tier_boots == 2{
   dash_max=4;
   dash_time=14;
   dash_spd=26;
} else if tier_boots == 3{
   dash_max=4;
   dash_time=12;
   dash_spd=28;
}

//Mechanic
if (dash&lt;dash_max &amp;&amp; !dash_cd &amp;&amp; key_dash) {
  dash++;
  dash_cd=true;
  shoot=true;
  alarm[0]=dash_time;
  move_towards_point(mouse_x,mouse_y,dash_spd);
  alarm[1]=dash_time/2;
  if dash==dash_max alarm[2]=dash_time*4.5;
}

//Skill room entrance
if distance_to_object(obj_weapon_upgrade) &lt; 96 {
   if (obj_stat.useable) &amp;&amp; (key_use){
      if !instance_exists(obj_roomTransition){
       var tempRoomFade;
       tempRoomFade = instance_create(x,y,obj_roomTransition);
       tempRoomFade.tempTarget = obj_weapon_upgrade.targetRoom;
    }
    
    player_x = obj_weapon_upgrade.target_x;
    player_y = obj_weapon_upgrade.target_y;
    }
}

//Death
if obj_stat.stat[1]&lt;=0 game_restart();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door_ext">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(obj_roomTransition){
   var tempRoomFade;
   tempRoomFade = instance_create(x,y,obj_roomTransition);
   tempRoomFade.tempTarget = other.targetRoom;
}

player_x = other.target_x;
player_y = other.target_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Transition
x = player_x;
y = player_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
